type: edu
files:
- name: default_parameter.py
  visible: true
  placeholders:
  - offset: 156
    length: 19
    placeholder_text: add parameters for function, set default value for name
    initial_state:
      length: 55
      offset: 158
    initialized_from_dependency: false
    possible_answer: subject, name="John"
    selected: true
    status: Solved
  text: |
    def multiply_by(a, b=2):
        return a * b

    print(multiply_by(3, 47))
    print(multiply_by(3))    # call function using default value for b parameter


    def hello(add parameters for function, set default value for name):
        print("Hello %s! My name is %s" % (subject, name))

    hello("PyCharm", "Jane")    # call "hello" function with "PyCharm as a subject parameter and "Jane" as a name
    hello("PyCharm")            # call "hello" function with "PyCharm as a subject parameter and default value for the name
  learner_created: false
- name: tests.py
  visible: false
  text: |-
    from test_helper import run_common_tests, failed, passed, get_answer_placeholders


    def test_window():
        window = get_answer_placeholders()[0]
        if "=" in window:
            passed()
        else:
            failed("Add a default value to the parameter")

    def test_window_names():
        window = get_answer_placeholders()[0]
        if "subject" in window and "name" in window:
            passed()
        else:
            failed("Add a default value to the parameter")

    if __name__ == '__main__':
        run_common_tests()
        test_window()
        test_window_names()
  learner_created: false
status: Solved
feedback:
  message: Congratulations!
  time: Thu, 22 Oct 2020 16:03:56 UTC
record: -1
