type: edu
custom_name: Variable access
files:
- name: access_variable.py
  visible: true
  placeholders:
  - offset: 220
    length: 5
    placeholder_text: create object of Car
    initial_state:
      length: 20
      offset: 220
    initialized_from_dependency: false
    possible_answer: Car()
    selected: false
    status: Solved
  - offset: 247
    length: 18
    placeholder_text: set car2 color
    initial_state:
      length: 14
      offset: 262
    initialized_from_dependency: false
    possible_answer: car2.color = "red"
    selected: true
    status: Solved
  text: |
    class Car:
        color = ""
        def description(self):
            description_string = "This is a %s car." % self.color    # we'll explain self parameter later in task 4
            return description_string

    car1 = Car()
    car2 = create object of Car

    car1.color = "blue"
    set car2 color

    print(car1.description())
    print(car2.description())
  learner_created: false
- name: tests.py
  visible: false
  text: |
    from test_helper import run_common_tests, get_answer_placeholders, passed, failed, get_file_output


    def test_window():
        window = get_answer_placeholders()[0]
        if "Car" in window and "(" in window and ")" in window:
            passed()
        else:
            failed("Create a new car using Car()")


    def test_window2():
        window = get_answer_placeholders()[1]
        output = get_file_output()
        if len(output) > 1 and output[1] == "This is a red car.":
            passed()
        else:
            failed("Change color using assignment to the car2.color")


    if __name__ == '__main__':
        run_common_tests()
        test_window()
        test_window2()
  learner_created: false
status: Solved
feedback:
  message: Congratulations!
  time: Thu, 22 Oct 2020 16:05:10 UTC
record: -1
